[ BANNO.ADDRESS.CHANGE.104.801

 **************************************************
 *   THIS CODE IS THE PROPERTY OF SYNERGENT AND   *
 *   CANNOT BE MODIFIED OR DISTRIBUTED WITHOUT    *
 *   CONSENT OF SYNERGENT.   COPYRIGHT 2021       *
 **************************************************

 Created On      : 07/14/2021
 Created By      : D Berry
 Salesforce #    : 74103
 Description     : Adapted from SAVE.ADDR.CHANGES.009.809 (case # 50741)
                   Address change report for Banno users - the report displays changes for the primary name
                   address record within the given date range



 [------------------------]
 [------------------------]
 [--  REVISION HISTORY  --]
 [------------------------]
 [------------------------]
  
  Modified Date :
  Modified By   :
  Salesforce #  :
  Modifications :

]

TARGET=ACCOUNT

DEFINE
 #INCLUDE "RD.GETDATA.DEF"
 #INCLUDE "RD.OUTPUT.DEF"
 #INCLUDE "SLIB.COMMON.DEF"
 #INCLUDE "SLIB.REPORTCATEGORY.DEF"
 #INCLUDE "SLIB.LISTEXPAND.LITE.DEF"
 #INCLUDE "SLIB.PACKAGEREC.NAME.DEF"
 
 FMSTARTDATE = DATE
 FMENDDATE = DATE
 WORKCNT = NUMBER
 WORKCNT2 = NUMBER
 ACCTWARNFOUND = NUMBER [bool]
 PRINTEDANYTESTOUTPUT = NUMBER [bool]
 
 NAMERECORDSFMDCNT = NUMBER
 PARENTRECORDTYPE  = CHARACTER(20) ARRAY(99)
 PARENTRECORDIDLOC = CHARACTER(10) ARRAY(99)
 NAMERECORDLOC     = NUMBER ARRAY(99)
 NEWLYCREATEDFLAG  = NUMBER ARRAY(99) [bool]
 PREVMAILOVERRIDE  = NUMBER ARRAY(99)
 PREVADDRTYPE      = NUMBER ARRAY(99)
 PREVSTREET        = CHARACTER(40) ARRAY(99)
 PREVEXTRA         = CHARACTER(40) ARRAY(99)
 PREVCITY          = CHARACTER(40) ARRAY(99)
 PREVSTATE         = CHARACTER(10) ARRAY(99)
 PREVZIP           = CHARACTER(10) ARRAY(99)
 PREVCOUNTRY       = CHARACTER(40) ARRAY(99)
 CHANGEDMAILOVERRIDE = NUMBER ARRAY(99) [bool]
 CHANGEDADDRTYPE   = NUMBER ARRAY(99) [bool]
 CHANGEDSTREET     = NUMBER ARRAY(99) [bool]
 CHANGEDEXTRA      = NUMBER ARRAY(99) [bool]
 CHANGEDCITY       = NUMBER ARRAY(99) [bool]
 CHANGEDSTATE      = NUMBER ARRAY(99) [bool]
 CHANGEDZIP        = NUMBER ARRAY(99) [bool]
 CHANGEDCOUNTRY    = NUMBER ARRAY(99) [bool]
 ACTIVEMAILOVERRIDEFLAG  = NUMBER ARRAY(99) [bool]
 NAMERECORDSSN     = CHARACTER(9) ARRAY(99)
 NAMERECORDTYPE    = NUMBER ARRAY(99)
 NAMERECORDDEATHDATE = DATE ARRAY(99)
 MAXNAMERECORDSPERACCOUNT = 100
 
 TEMPPARENTTYPECHAR = CHARACTER
 TEMPPARENTIDLOC = CHARACTER
 TEMPNAMELOC = NUMBER
 TEMPNEWLYCREATEDFLAG = NUMBER [bool]
 TEMPMAILOVERRIDE = NUMBER
 TEMPADDRTYPE = NUMBER
 TEMPSTREET = CHARACTER
 TEMPEXTRA = CHARACTER
 TEMPCITY = CHARACTER
 TEMPSTATE = CHARACTER
 TEMPZIP = CHARACTER
 TEMPCOUNTRY = CHARACTER
 TEMPCHANGEDMAILOVERRIDE = NUMBER [bool]
 TEMPCHANGEDADDRTYPE = NUMBER [bool]
 TEMPCHANGEDSTREET = NUMBER [bool]
 TEMPCHANGEDEXTRA = NUMBER [bool]
 TEMPCHANGEDCITY = NUMBER [bool]
 TEMPCHANGEDSTATE = NUMBER [bool]
 TEMPCHANGEDZIP = NUMBER [bool]
 TEMPCHANGEDCOUNTRY = NUMBER [bool]
 CHANGEMADETOADDRESS = NUMBER [bool]
 VALIDRECORDTYPE = NUMBER [bool]
 
 PREVSEQUENCENUMBER = NUMBER
 RECORDTYPEMAP = CHARACTER(10) ARRAY(25)
 
 MATCHEDRECORDINDEX   = NUMBER
 FOUNDNAMERECORD = NUMBER [bool]
 
 TOPLEVELRECORDINDEX = NUMBER
 
 RECORDVALUE = 0
 MAILTOVALUE = 1
 OLDMAILMAILOVERRIDE = NUMBER ARRAY(1)
 OLDMAILADDRTYPE = NUMBER ARRAY(1)
 OLDMAILSTREET = CHARACTER ARRAY(1)
 OLDMAILEXTRA = CHARACTER ARRAY(1)
 OLDMAILCITY = CHARACTER ARRAY(1)
 OLDMAILSTATE = CHARACTER ARRAY(1)
 OLDMAILZIP = CHARACTER ARRAY(1)
 OLDMAILCOUNTRY = CHARACTER ARRAY(1)
 NEWMAILOVERRIDE = NUMBER ARRAY(1)
 NEWADDRTYPE = NUMBER ARRAY(1)
 NEWSTREET = CHARACTER ARRAY(1)
 NEWEXTRA = CHARACTER ARRAY(1)
 NEWCITY = CHARACTER ARRAY(1)
 NEWSTATE = CHARACTER ARRAY(1)
 NEWZIP = CHARACTER ARRAY(1)
 NEWCOUNTRY = CHARACTER ARRAY(1)
 MAILTONAME = CHARACTER
 
 ACCTCONST="ACCT"
 SHARECONST="SHARE"
 LOANCONST="LOAN"
 CARDCONST="CARD"
 
 MAILOVERRIDERECORDCHANGEINDEX=NUMBER
 
 TARGETLOCATOR=NUMBER
 PRIMEMAILCHANGEINDEX=NUMBER
 
 LOGMESSAGE=CHARACTER
 
 NUMADDRESSCHANGESTOINCLUDE=NUMBER
 
 TESTINGACCOUNT=CHARACTER
 INCLUDEDEBUGOUTPUT=NUMBER [bool]
 
 NUMPRINTEDADDRESS = NUMBER
 PRINTEDADDRTYPE = NUMBER ARRAY(200)
 PRINTEDSTREET = CHARACTER ARRAY(200)
 PRINTEDEXTRA = CHARACTER ARRAY(200)
 PRINTEDCITY = CHARACTER ARRAY(200)
 PRINTEDSTATE = CHARACTER ARRAY(200)
 PRINTEDZIP = CHARACTER ARRAY(200)
 PRINTEDCOUNTRY = CHARACTER ARRAY(200)
 OLDMAILTOALREADYPRINTED = NUMBER [bool]
 NEWMAILTOALREADYPRINTED = NUMBER [bool]
 
 EXCLUDEREASON=CHARACTER
 
 GETOTHERDATA=0
 SETNEWADDRESSVARS=1
 GETNAMEDATAMODE=NUMBER [0 = Get record other data, 1 = set new vars]
 GETNAMEDATAINDEX=NUMBER
 
 ACCOUNTHASACTIVEMAILOVERRIDE=NUMBER [bool]
 
 OCHANNEL2=NUMBER
 OERROR=CHARACTER
END

SETUP
 CALL SLIBCOMMONSET
 GETNAMEDATAMODE=-1
 GETNAMEDATAINDEX=-1
 PREVSEQUENCENUMBER=-1
 
 RECORDTYPEMAP(2)=ACCTCONST
 RECORDTYPEMAP(7)=SHARECONST
 RECORDTYPEMAP(12)=LOANCONST
 RECORDTYPEMAP(20)=CARDCONST
 
 FMSTARTDATE=DATEREAD("Enter the start FM date:", "Default is first day of current month")
 IF(FMSTARTDATE=SLIBBLANKDATE) THEN
  FMSTARTDATE=DATEOFFSET(SYSTEMDATE,0,1)
 FMENDDATE=DATEREAD("Enter the end FM date:", "Default is the current date")
 IF(FMENDDATE=SLIBBLANKDATE) THEN
  FMENDDATE=SYSTEMDATE

 SLIBLELLISTINPUT=CHARACTERREAD("Acct Warning(s) to Exclude",
                                "Use '-' for ranges",
                                "Use ',' between ranges and single types",
                                "Default is NONE.",
                                "Enter Acct Warning(s) to Exclude")
 IF SLIBLELLISTINPUT="" THEN
  SLIBLELLISTINPUT="NONE"
 CALL SLIBLELLISTEXPAND
  
 IF INCLUDEDEBUGOUTPUT=SLIBTRUE THEN
  OUTPUTOPEN(OUTPUTDEVREPORT,0,"SAVE.ADDR.CHANGES.009.809-Debug",SLIBRCNOTICE,OCHANNEL2,OERROR)
END

SELECT
 ACCOUNT:CLOSEDATE=SLIBBLANKDATE
 AND ANY PREFERENCE WITH(PREFERENCE:HBUSERNAME<>"")
END
    
PRINT TITLE="BANNO.ADDR.CHANGES.101.801-Summary" REPORTCATEGORY=SLIBRCMISCELLANE
 HEADERS END

 CALL RESETACCTVARS
 CALL RESETTEMPVARS
 
 CALL SETACCTMAILOVERRIDEFLAG
 CALL CHECKACCTWARNINGS
 
 IF ACCTWARNFOUND=SLIBFALSE THEN
  DO
   CALL READFMHISTORY [gather all fm done to name records today]
   
    FOR TOPLEVELRECORDINDEX=0 TO NAMERECORDSFMDCNT-1
     DO
      CALL PREPOLDANDNEWADDRESSES [set the old and new record address, and the old and new "mail to" addresses]
      CALL CHECKTOEXCLUDETHISFM [check various conditions to exclude this address change fm]
      IF EXCLUDEREASON="" THEN
       DO
        CALL PRINTCHANGEINFO [output included address changes to summary report]
        NUMADDRESSCHANGESTOINCLUDE=NUMADDRESSCHANGESTOINCLUDE+1
       END
      ELSE IF INCLUDEDEBUGOUTPUT=SLIBTRUE THEN
       DO
        CALL PRINTEXCLUDEREASON [if debugging, list when address changes are exluded and why]
       END
     END
  END
END

TOTAL
 NEWLINE PRINT REPEATCHR("-",132) NEWLINE
 NEWLINE
 PRINT "TOTALS "+FORMAT(SLIBDATEFORMAT,FMSTARTDATE) + " - " + FORMAT(SLIBDATEFORMAT,FMENDDATE)
 NEWLINE
 PRINT "Number of included address changes: "
 PRINT NUMADDRESSCHANGESTOINCLUDE
 NEWLINE
END

[**********************************************]
[**********************************************]
PROCEDURE SETACCTMAILOVERRIDEFLAG
 ACCOUNTHASACTIVEMAILOVERRIDE=SLIBFALSE
 FOR EACH NAME WITH (NAME:TYPE=2 AND NAME:MAILOVERRIDE=1 AND
                    (NAME:EXPIRATIONDATE='--/--/--' OR NAME:EXPIRATIONDATE>FMENDDATE))
  DO
   ACCOUNTHASACTIVEMAILOVERRIDE=SLIBTRUE
  END
END

[**********************************************]
[**********************************************]
PROCEDURE CHECKTOEXCLUDETHISFM
 EXCLUDEREASON=""

 IF PARENTRECORDTYPE(TOPLEVELRECORDINDEX)<>"ACCT" OR NAMERECORDTYPE(TOPLEVELRECORDINDEX)<>0 THEN
 DO
  EXCLUDEREASON="Not primary name"
 END
END

[**********************************************]
[**********************************************]
PROCEDURE PRINTEXCLUDEREASON
 IF INCLUDEDEBUGOUTPUT=SLIBTRUE THEN
  DO
   OUTPUTSWITCH(OCHANNEL2,OERROR)
   CALL PRINTCHANGEINFO
   OUTPUTSWITCH(OUTPUTCHANNELDEFAULT,OERROR)
  END
END

[**********************************************]
[**********************************************]
PROCEDURE CHECKACCTWARNINGS
 ACCTWARNFOUND=SLIBFALSE
 FOR WORKCNT=1 TO 20
  DO
   IF ACCOUNT:WARNINGCODE:(WORKCNT)<>0 AND
      SLIBLELLIST(ACCOUNT:WARNINGCODE:(WORKCNT))=SLIBLELTRUE AND
      (ACCOUNT:WARNINGEXPIRATION:(WORKCNT)='--/--/--' OR ACCOUNT:WARNINGEXPIRATION:(WORKCNT)>FMENDDATE) THEN
    DO
     ACCTWARNFOUND=SLIBTRUE
    END
  END
END

[**********************************************]
[**********************************************]
PROCEDURE RESETACCTVARS
 FOR WORKCNT=0 TO NAMERECORDSFMDCNT-1
  DO
   PARENTRECORDTYPE(WORKCNT)=""
   PARENTRECORDIDLOC(WORKCNT)=""
   NAMERECORDLOC(WORKCNT)=0
   NEWLYCREATEDFLAG(WORKCNT)=SLIBFALSE
   PREVMAILOVERRIDE(WORKCNT)=-1
   PREVADDRTYPE(WORKCNT)=0
   PREVSTREET(WORKCNT)=""
   PREVEXTRA(WORKCNT)=""
   PREVCITY(WORKCNT)=""
   PREVSTATE(WORKCNT)=""
   PREVZIP(WORKCNT)=""
   PREVCOUNTRY(WORKCNT)=""
   CHANGEDMAILOVERRIDE(WORKCNT)=SLIBFALSE
   CHANGEDADDRTYPE(WORKCNT)=SLIBFALSE
   CHANGEDSTREET(WORKCNT)=SLIBFALSE
   CHANGEDEXTRA(WORKCNT)=SLIBFALSE
   CHANGEDCITY(WORKCNT)=SLIBFALSE
   CHANGEDSTATE(WORKCNT)=SLIBFALSE
   CHANGEDZIP(WORKCNT)=SLIBFALSE
   CHANGEDCOUNTRY(WORKCNT)=SLIBFALSE
   ACTIVEMAILOVERRIDEFLAG(WORKCNT)=SLIBFALSE
   NAMERECORDSSN(WORKCNT)=""
   NAMERECORDTYPE(WORKCNT)=-1
   NAMERECORDDEATHDATE(WORKCNT)='--/--/--'
  END
 NAMERECORDSFMDCNT=0
 FOR WORKCNT=0 TO NUMPRINTEDADDRESS-1
  DO
   FOR WORKCNT2=0 TO 1
    DO
     PRINTEDADDRTYPE(WORKCNT)=0
     PRINTEDSTREET(WORKCNT)=""
     PRINTEDEXTRA(WORKCNT)=""
     PRINTEDCITY(WORKCNT)=""
     PRINTEDSTATE(WORKCNT)=""
     PRINTEDZIP(WORKCNT)=""
     PRINTEDCOUNTRY(WORKCNT)=""
    END
  END
 NUMPRINTEDADDRESS=0
END

[**********************************************]
[**********************************************]
PROCEDURE RESETTEMPVARS
 TEMPPARENTTYPECHAR=""
 TEMPPARENTIDLOC=""
 TEMPNAMELOC=0
 TEMPNEWLYCREATEDFLAG=SLIBFALSE
 TEMPMAILOVERRIDE=-1
 TEMPADDRTYPE=0
 TEMPSTREET=""
 TEMPEXTRA=""
 TEMPCITY=""
 TEMPSTATE=""
 TEMPZIP=""
 TEMPCOUNTRY=""
 TEMPCHANGEDMAILOVERRIDE=SLIBFALSE
 TEMPCHANGEDADDRTYPE=SLIBFALSE
 TEMPCHANGEDSTREET=SLIBFALSE
 TEMPCHANGEDEXTRA=SLIBFALSE
 TEMPCHANGEDCITY=SLIBFALSE
 TEMPCHANGEDSTATE=SLIBFALSE
 TEMPCHANGEDZIP=SLIBFALSE
 TEMPCHANGEDCOUNTRY=SLIBFALSE
 CHANGEMADETOADDRESS=SLIBFALSE
 VALIDRECORDTYPE=SLIBFALSE
END

[**********************************************]
[**********************************************]
PROCEDURE READFMHISTORY
 PREVSEQUENCENUMBER=-1
 FOR EACH FMHISTORY WITH (FMHISTORY:POSTDATE>=FMSTARTDATE AND
                          FMHISTORY:POSTDATE<=FMENDDATE)
  DO
   IF FMHISTORY:SEQUENCENUMBER<>PREVSEQUENCENUMBER AND
      PREVSEQUENCENUMBER<>-1 THEN
    DO
     CALL CHECKTOSAVETHISCHANGE
     CALL RESETTEMPVARS
    END
   IF INCLUDEDEBUGOUTPUT=SLIBTRUE AND TESTINGACCOUNT<>"" THEN [too much output for > 1 account]
    CALL PRINTTESTDATAFMLINES
    
   CALL ASSIGNTEMPDATA
   
   PREVSEQUENCENUMBER=FMHISTORY:SEQUENCENUMBER
  END
 IF PREVSEQUENCENUMBER<>-1 THEN
  CALL CHECKTOSAVETHISCHANGE [check final (oldest) sequence]
END

[**********************************************]
[**********************************************]
PROCEDURE ASSIGNTEMPDATA
 IF FMHISTORY:RECORDTYPE<=25 THEN
  DO
   TEMPPARENTTYPECHAR=RECORDTYPEMAP(FMHISTORY:RECORDTYPE) 
   IF TEMPPARENTTYPECHAR<>"" THEN [Only include FM on supported records (account, share, loan, card)]
    VALIDRECORDTYPE=SLIBTRUE
  END
 IF TEMPPARENTTYPECHAR<>CARDCONST THEN
  TEMPPARENTIDLOC=FMHISTORY:ID
 ELSE IF FMHISTORY:FIELDNAME="Revise Card LOC" THEN
  TEMPPARENTIDLOC=FORMAT("9999999999",FMHISTORY:NEWNUMBER)
 
 IF FMHISTORY:FIELDNAME="Revise Name LOC" OR
    FMHISTORY:FIELDNAME="Revise Share Name LOC" OR
    FMHISTORY:FIELDNAME="Revise Loan Name LOC" OR
    FMHISTORY:FIELDNAME="Revise Card Name LOC" OR  
    FMHISTORY:FIELDNAME="New Locator" THEN
  TEMPNAMELOC=FMHISTORY:NEWNUMBER
 ELSE IF FMHISTORY:FIELDNAME="Insert Before Name LOC" OR
         FMHISTORY:FIELDNAME="Insert After Name LOC" OR
         FMHISTORY:FIELDNAME="Insert Before Share Name LOC" OR
         FMHISTORY:FIELDNAME="Insert After Share Name LOC" OR
         FMHISTORY:FIELDNAME="Insert Before Loan Name LOC" OR
         FMHISTORY:FIELDNAME="Insert After Loan Name LOC" OR
         FMHISTORY:FIELDNAME="Insert Before Card Name LOC" OR
         FMHISTORY:FIELDNAME="Insert After Card Name LOC" THEN
  DO
   TEMPNEWLYCREATEDFLAG=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Mail Override" THEN
  DO
   TEMPMAILOVERRIDE=FMHISTORY:OLDNUMBER
   TEMPCHANGEDMAILOVERRIDE=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Address Type" THEN
  DO
   TEMPADDRTYPE=FMHISTORY:OLDNUMBER
   TEMPCHANGEDADDRTYPE=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Street" THEN
  DO
   TEMPSTREET=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDSTREET=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="City" THEN
  DO
   TEMPCITY=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDCITY=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="State" THEN
  DO
   TEMPSTATE=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDSTATE=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Zip Code" THEN
  DO
   TEMPZIP=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDZIP=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Extra Address" THEN
  DO
   TEMPEXTRA=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDEXTRA=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
 ELSE IF FMHISTORY:FIELDNAME="Country" THEN
  DO
   TEMPCOUNTRY=FMHISTORY:OLDCHARACTER
   TEMPCHANGEDCOUNTRY=SLIBTRUE
   CHANGEMADETOADDRESS=SLIBTRUE
  END
END

[**********************************************]
[**********************************************]
PROCEDURE CHECKTOSAVETHISCHANGE
 IF CHANGEMADETOADDRESS=SLIBTRUE AND
    VALIDRECORDTYPE=SLIBTRUE THEN [Will be false if change made to unsupported name type or loanapp person.]
  DO
   IF INCLUDEDEBUGOUTPUT=SLIBTRUE AND TESTINGACCOUNT<>"" THEN
    DO
     OUTPUTSWITCH(OCHANNEL2,OERROR)
     NEWLINE
     PRINT "!!!!!!!!!! SAVING !!!!!!!!!!"
     NEWLINE
     NEWLINE
     OUTPUTSWITCH(OUTPUTCHANNELDEFAULT,OERROR)
    END
   CALL SAVETEMPVARSTOARRAY
  END
END

[**********************************************]
[**********************************************]
PROCEDURE SAVETEMPVARSTOARRAY
 CALL GETNAMERECORDINDEX [update same index if FM has already been done on this name record]
 IF MATCHEDRECORDINDEX=-1 AND
    NAMERECORDSFMDCNT<MAXNAMERECORDSPERACCOUNT THEN
  DO
   MATCHEDRECORDINDEX=NAMERECORDSFMDCNT
   NAMERECORDSFMDCNT=NAMERECORDSFMDCNT+1
  END
 IF MATCHEDRECORDINDEX<>-1 THEN
  DO
   PARENTRECORDTYPE(MATCHEDRECORDINDEX)=TEMPPARENTTYPECHAR
   PARENTRECORDIDLOC(MATCHEDRECORDINDEX)=TEMPPARENTIDLOC
   NAMERECORDLOC(MATCHEDRECORDINDEX)=TEMPNAMELOC
   
   IF TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     NEWLYCREATEDFLAG(MATCHEDRECORDINDEX)=SLIBTRUE
    END
    
   [Only override these if they have been changed (or if temp newly created flag = true)]
   IF TEMPCHANGEDMAILOVERRIDE=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVMAILOVERRIDE(MATCHEDRECORDINDEX)=TEMPMAILOVERRIDE
     CHANGEDMAILOVERRIDE(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDADDRTYPE=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVADDRTYPE(MATCHEDRECORDINDEX)=TEMPADDRTYPE
     CHANGEDADDRTYPE(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDSTREET=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVSTREET(MATCHEDRECORDINDEX)=TEMPSTREET
     CHANGEDSTREET(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDEXTRA=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVEXTRA(MATCHEDRECORDINDEX)=TEMPEXTRA
     CHANGEDEXTRA(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDCITY=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVCITY(MATCHEDRECORDINDEX)=TEMPCITY
     CHANGEDCITY(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDSTATE=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVSTATE(MATCHEDRECORDINDEX)=TEMPSTATE
     CHANGEDSTATE(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDZIP=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVZIP(MATCHEDRECORDINDEX)=TEMPZIP
     CHANGEDZIP(MATCHEDRECORDINDEX)=SLIBTRUE
    END
   IF TEMPCHANGEDCOUNTRY=SLIBTRUE OR TEMPNEWLYCREATEDFLAG=SLIBTRUE THEN
    DO
     PREVCOUNTRY(MATCHEDRECORDINDEX)=TEMPCOUNTRY
     CHANGEDCOUNTRY(MATCHEDRECORDINDEX)=SLIBTRUE
    END
    
   GETNAMEDATAMODE=0
   GETNAMEDATAINDEX=MATCHEDRECORDINDEX
   CALL GETNAMERECORDDATA [will call SAVEOTHERNAMERECORDINFO on this name record]
   IF FOUNDNAMERECORD=SLIBFALSE THEN
    DO
     IF PARENTRECORDTYPE(MATCHEDRECORDINDEX)="" OR
        (PARENTRECORDTYPE(MATCHEDRECORDINDEX)<>"ACCT" AND PARENTRECORDIDLOC(MATCHEDRECORDINDEX)="") OR
        NAMERECORDLOC(MATCHEDRECORDINDEX)=0 THEN
      DO
       PRINT "ERR-Missing temp vars at SSN lookup. Terminating. Account "
       PRINT ACCOUNT:NUMBER
       NEWLINE
       PRINT "Temp record type: "
       NEWLINE
       PRINT "Temp record ID: "
       NEWLINE
       TERMINATE
      END
     [If the temp vars are not missing then the record must have been deleted after being created/revised ]
     [this solution cannot handle deleted records because FM history does not provide the fields that were]
     [in the deleted record, meaning we can't pull the SSN or more importantly the old address data.      ]
    END
  END
 ELSE
  DO
   PRINT "Excpt-Too many (>99) different name records FM'd on single account "+ACCOUNT:NUMBER+". Remained ignored."
   NEWLINE
  END
END

[**********************************************]
[**********************************************]
PROCEDURE GETNAMERECORDDATA
 IF GETNAMEDATAMODE=-1 OR GETNAMEDATAINDEX=-1 THEN
  DO
   PRINT "ERR-GETNAMEDATAMODE OR GETNAMEDATAINDEX not set"
   NEWLINE
   TERMINATE
  END
  
 FOUNDNAMERECORD=SLIBFALSE

 FOR ACCOUNT ACCOUNT:NUMBER
  DO
   IF PARENTRECORDTYPE(GETNAMEDATAINDEX)=ACCTCONST THEN
    DO
     FOR EACH NAME WITH (NAME:LOCATOR)=NAMERECORDLOC(GETNAMEDATAINDEX)
      DO
       CALL SLIBPNACCOUNT
       CALL HANDLENAMERECORD
      END
    END
   ELSE IF PARENTRECORDTYPE(GETNAMEDATAINDEX)=SHARECONST THEN
    DO
     FOR EACH SHARE WITH (SHARE:ID=PARENTRECORDIDLOC(GETNAMEDATAINDEX))
      DO
       FOR EACH SHARE NAME WITH (SHARE NAME:LOCATOR=NAMERECORDLOC(GETNAMEDATAINDEX))
        DO
         CALL SLIBPNSHARE
         CALL HANDLENAMERECORD
        END
      END
    END
   ELSE IF PARENTRECORDTYPE(GETNAMEDATAINDEX)=LOANCONST THEN
    DO
     FOR EACH LOAN WITH (LOAN:ID=PARENTRECORDIDLOC(GETNAMEDATAINDEX))
      DO
       FOR EACH LOAN NAME WITH (LOAN NAME:LOCATOR=NAMERECORDLOC(GETNAMEDATAINDEX))
        DO
         CALL SLIBPNLOAN
         CALL HANDLENAMERECORD
        END
      END
    END
   ELSE IF PARENTRECORDTYPE(GETNAMEDATAINDEX)=CARDCONST THEN
    DO
     FOR EACH CARD WITH (CARD:LOCATOR=VALUE(PARENTRECORDIDLOC(GETNAMEDATAINDEX)))
      DO
       FOR EACH CARD NAME WITH (CARD NAME:LOCATOR=NAMERECORDLOC(GETNAMEDATAINDEX))
        DO
         CALL SLIBPNCARD
         CALL HANDLENAMERECORD
        END
      END
    END
  END
  
 GETNAMEDATAMODE=-1
 GETNAMEDATAINDEX=-1
END

[**********************************************]
[**********************************************]
PROCEDURE HANDLENAMERECORD
 FOUNDNAMERECORD=SLIBTRUE
 
 IF GETNAMEDATAMODE=GETOTHERDATA THEN
  CALL SAVEOTHERNAMERECORDINFO
 ELSE IF GETNAMEDATAMODE=SETNEWADDRESSVARS THEN
  CALL SAVENEWADDRESSVARS
END

[**********************************************]
[**********************************************]
PROCEDURE SAVEOTHERNAMERECORDINFO
 NAMERECORDTYPE(GETNAMEDATAINDEX)=SLIBPNTYPE
 NAMERECORDSSN(GETNAMEDATAINDEX)=SLIBPNSSN
 IF PARENTRECORDTYPE(GETNAMEDATAINDEX)=ACCTCONST AND
    SLIBPNMAILOVERRIDE=1 AND (SLIBPNEXPIRATIONDATE='--/--/--' OR SLIBPNEXPIRATIONDATE>FMENDDATE) THEN
  ACTIVEMAILOVERRIDEFLAG(GETNAMEDATAINDEX)=SLIBTRUE
END

[**********************************************]
[**********************************************]
PROCEDURE SAVENEWADDRESSVARS
 NEWMAILOVERRIDE(RECORDVALUE)=SLIBPNMAILOVERRIDE
 NEWADDRTYPE(RECORDVALUE)=SLIBPNADDRESSTYPE
 NEWSTREET(RECORDVALUE)=SLIBPNSTREET
 NEWEXTRA(RECORDVALUE)=SLIBPNEXTRAADDRESS
 NEWCITY(RECORDVALUE)=SLIBPNCITY
 NEWSTATE(RECORDVALUE)=SLIBPNSTATE
 NEWZIP(RECORDVALUE)=SLIBPNZIPCODE
 NEWCOUNTRY(RECORDVALUE)=SLIBPNCOUNTRY
 MAILTONAME=SLIBPNLONGNAME
END

[**********************************************]
[**********************************************]
PROCEDURE PRINTTESTDATAFMLINES
 IF INCLUDEDEBUGOUTPUT=SLIBTRUE THEN
  DO
   OUTPUTSWITCH(OCHANNEL2,OERROR)

   IF PRINTEDANYTESTOUTPUT=SLIBFALSE THEN
    DO
     PRINT "Field Name (field #)"
     COL = 040 "Starting Value"
     COL = 080 "Ending Value"
     COL = 120 "(Parent Record Type & ID if applicable)"
     NEWLINE
     PRINTEDANYTESTOUTPUT=SLIBTRUE
    END
   PRINT FMHISTORY:FIELDNAME + " ("
   PRINT FMHISTORY:FIELDNUMBER
   PRINT ")"
   COL = 040 " from "
   IF FMHISTORY:DATATYPE=0 OR FMHISTORY:DATATYPE=1 THEN
    PRINT FMHISTORY:OLDCHARACTER
   ELSE IF FMHISTORY:DATATYPE=2 THEN
    PRINT FMHISTORY:OLDRATE
   ELSE IF FMHISTORY:DATATYPE=3 THEN
    PRINT FMHISTORY:OLDDATE
   ELSE IF FMHISTORY:DATATYPE=4 OR FMHISTORY:DATATYPE=5 OR FMHISTORY:DATATYPE=8 THEN
    PRINT FMHISTORY:OLDNUMBER
   ELSE IF FMHISTORY:DATATYPE=6 OR FMHISTORY:DATATYPE=7 THEN
    PRINT FMHISTORY:OLDMONEY
   COL = 080 " to "
   IF FMHISTORY:DATATYPE=0 OR FMHISTORY:DATATYPE=1 THEN
    PRINT SEGMENT(FMHISTORY:NEWCHARACTER,1,30)
   ELSE IF FMHISTORY:DATATYPE=2 THEN
    PRINT FMHISTORY:NEWRATE
   ELSE IF FMHISTORY:DATATYPE=3 THEN
    PRINT FMHISTORY:NEWDATE
   ELSE IF FMHISTORY:DATATYPE=4 OR FMHISTORY:DATATYPE=5 OR FMHISTORY:DATATYPE=8 THEN
    PRINT FMHISTORY:NEWNUMBER
   ELSE IF FMHISTORY:DATATYPE=6 OR FMHISTORY:DATATYPE=7 THEN
    PRINT FMHISTORY:NEWMONEY
   COL = 115 "("
   PRINT FMHISTORY:RECORDTYPE
   IF FMHISTORY:ID<>"" THEN
    PRINT " "+FMHISTORY:ID
   PRINT ")"
   PRINT " "
   PRINT FMHISTORY:SEQUENCENUMBER
   NEWLINE
   
   OUTPUTSWITCH(OUTPUTCHANNELDEFAULT,OERROR)
  END
END

[**********************************************]
[**********************************************]
PROCEDURE GETNAMERECORDINDEX
 MATCHEDRECORDINDEX=-1
 FOR WORKCNT=0 TO NAMERECORDSFMDCNT-1
  DO
   IF PARENTRECORDTYPE(WORKCNT)=TEMPPARENTTYPECHAR AND
      PARENTRECORDIDLOC(WORKCNT)=TEMPPARENTIDLOC AND
      NAMERECORDLOC(WORKCNT)=TEMPNAMELOC THEN
    DO
     MATCHEDRECORDINDEX=WORKCNT
     WORKCNT=NAMERECORDSFMDCNT [break]
    END
  END
END

[**********************************************]
[**********************************************]
PROCEDURE PREPOLDANDNEWADDRESSES
 [Set "old" record data to the earliest values found in fm history]
 OLDMAILMAILOVERRIDE(RECORDVALUE)=PREVMAILOVERRIDE(TOPLEVELRECORDINDEX)
 OLDMAILADDRTYPE(RECORDVALUE)=PREVADDRTYPE(TOPLEVELRECORDINDEX)
 OLDMAILSTREET(RECORDVALUE)=PREVSTREET(TOPLEVELRECORDINDEX)
 OLDMAILEXTRA(RECORDVALUE)=PREVEXTRA(TOPLEVELRECORDINDEX)
 OLDMAILCITY(RECORDVALUE)=PREVCITY(TOPLEVELRECORDINDEX)
 OLDMAILSTATE(RECORDVALUE)=PREVSTATE(TOPLEVELRECORDINDEX)
 OLDMAILZIP(RECORDVALUE)=PREVZIP(TOPLEVELRECORDINDEX)
 OLDMAILCOUNTRY(RECORDVALUE)=PREVCOUNTRY(TOPLEVELRECORDINDEX)
 
 NEWMAILOVERRIDE(RECORDVALUE)=-1
 NEWADDRTYPE(RECORDVALUE)=0
 NEWSTREET(RECORDVALUE)=""
 NEWEXTRA(RECORDVALUE)=""
 NEWCITY(RECORDVALUE)=""
 NEWSTATE(RECORDVALUE)=""
 NEWZIP(RECORDVALUE)=""
 NEWCOUNTRY(RECORDVALUE)=""
 MAILTONAME=""
 
 GETNAMEDATAMODE=1
 GETNAMEDATAINDEX=TOPLEVELRECORDINDEX
 CALL GETNAMERECORDDATA [will call SAVENEWADDRESSVARS on this name record, which populates the "new" record data]
  
 [set unchanged "old" record data to current values]
 IF CHANGEDMAILOVERRIDE(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILMAILOVERRIDE(RECORDVALUE)=NEWMAILOVERRIDE(RECORDVALUE)
 IF CHANGEDADDRTYPE(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILADDRTYPE(RECORDVALUE)=NEWADDRTYPE(RECORDVALUE)
 IF CHANGEDSTREET(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILSTREET(RECORDVALUE)=NEWSTREET(RECORDVALUE)
 IF CHANGEDEXTRA(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILEXTRA(RECORDVALUE)=NEWEXTRA(RECORDVALUE)
 IF CHANGEDCITY(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILCITY(RECORDVALUE)=NEWCITY(RECORDVALUE)
 IF CHANGEDSTATE(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILSTATE(RECORDVALUE)=NEWSTATE(RECORDVALUE)
 IF CHANGEDZIP(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILZIP(RECORDVALUE)=NEWZIP(RECORDVALUE)
 IF CHANGEDCOUNTRY(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  OLDMAILCOUNTRY(RECORDVALUE)=NEWCOUNTRY(RECORDVALUE)
  
 [Inititalize "mail to" addresses as equal to the record old/new values before potentially overriding them]
 OLDMAILMAILOVERRIDE(MAILTOVALUE)=OLDMAILMAILOVERRIDE(RECORDVALUE)
 OLDMAILADDRTYPE(MAILTOVALUE)=OLDMAILADDRTYPE(RECORDVALUE)
 OLDMAILSTREET(MAILTOVALUE)=OLDMAILSTREET(RECORDVALUE)
 OLDMAILEXTRA(MAILTOVALUE)=OLDMAILEXTRA(RECORDVALUE)
 OLDMAILCITY(MAILTOVALUE)=OLDMAILCITY(RECORDVALUE)
 OLDMAILSTATE(MAILTOVALUE)=OLDMAILSTATE(RECORDVALUE)
 OLDMAILZIP(MAILTOVALUE)=OLDMAILZIP(RECORDVALUE)
 OLDMAILCOUNTRY(MAILTOVALUE)=OLDMAILCOUNTRY(RECORDVALUE)
 NEWMAILOVERRIDE(MAILTOVALUE)=NEWMAILOVERRIDE(RECORDVALUE)
 NEWADDRTYPE(MAILTOVALUE)=NEWADDRTYPE(RECORDVALUE)
 NEWSTREET(MAILTOVALUE)=NEWSTREET(RECORDVALUE)
 NEWEXTRA(MAILTOVALUE)=NEWEXTRA(RECORDVALUE)
 NEWCITY(MAILTOVALUE)=NEWCITY(RECORDVALUE)
 NEWSTATE(MAILTOVALUE)=NEWSTATE(RECORDVALUE)
 NEWZIP(MAILTOVALUE)=NEWZIP(RECORDVALUE)
 NEWCOUNTRY(MAILTOVALUE)=NEWCOUNTRY(RECORDVALUE)
 
 LOGMESSAGE="Address change, no mail override. "
 IF NEWLYCREATEDFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE THEN
  LOGMESSAGE=LOGMESSAGE+" test"
  
 [If not currently processing a change to the mailing override then send "old" letters to whatever      ]
 [the mailing override address was before today's FM (if any). If there is a mailing address but it was ]
 [created today, it will not count. Ie the "old mail to" address will remain as the "old" address       ]
 IF ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBFALSE THEN
  DO
   CALL HASMAILOVERRIDEBEENFMDTODAY
   IF MAILOVERRIDERECORDCHANGEINDEX<>-1 THEN
    DO
     FOR EACH NAME WITH (NAME:LOCATOR=NAMERECORDLOC(MAILOVERRIDERECORDCHANGEINDEX))
      DO
       OLDMAILMAILOVERRIDE(MAILTOVALUE)=NAME:MAILOVERRIDE
       OLDMAILADDRTYPE(MAILTOVALUE)=NAME:ADDRESSTYPE
       OLDMAILSTREET(MAILTOVALUE)=NAME:STREET
       OLDMAILEXTRA(MAILTOVALUE)=NAME:EXTRAADDRESS
       OLDMAILCITY(MAILTOVALUE)=NAME:CITY
       OLDMAILSTATE(MAILTOVALUE)=NAME:STATE
       OLDMAILZIP(MAILTOVALUE)=NAME:ZIPCODE
       OLDMAILCOUNTRY(MAILTOVALUE)=NAME:COUNTRY
      END
     IF CHANGEDMAILOVERRIDE(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILMAILOVERRIDE(MAILTOVALUE)=PREVMAILOVERRIDE(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDADDRTYPE(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILADDRTYPE(MAILTOVALUE)=PREVADDRTYPE(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDSTREET(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILSTREET(MAILTOVALUE)=PREVSTREET(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDEXTRA(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILEXTRA(MAILTOVALUE)=PREVEXTRA(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDCITY(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILCITY(MAILTOVALUE)=PREVCITY(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDSTATE(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILSTATE(MAILTOVALUE)=PREVSTATE(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDZIP(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILZIP(MAILTOVALUE)=PREVZIP(MAILOVERRIDERECORDCHANGEINDEX)
     IF CHANGEDCOUNTRY(MAILOVERRIDERECORDCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILCOUNTRY(MAILTOVALUE)=PREVCOUNTRY(MAILOVERRIDERECORDCHANGEINDEX)
     LOGMESSAGE="Mailing override has been updated today. Old mailto address = mailing override address as it was before any FM today."
    END
   ELSE
    DO
     FOR EACH NAME WITH (NAME:ADDRFMLASTDATE<FMENDDATE AND
                         NAME:MAILOVERRIDE=1 AND
                         (NAME:EXPIRATIONDATE='--/--/--' OR NAME:EXPIRATIONDATE>FMENDDATE))
      DO
       OLDMAILMAILOVERRIDE(MAILTOVALUE)=NAME:MAILOVERRIDE
       OLDMAILADDRTYPE(MAILTOVALUE)=NAME:ADDRESSTYPE
       OLDMAILSTREET(MAILTOVALUE)=NAME:STREET
       OLDMAILEXTRA(MAILTOVALUE)=NAME:EXTRAADDRESS
       OLDMAILCITY(MAILTOVALUE)=NAME:CITY
       OLDMAILSTATE(MAILTOVALUE)=NAME:STATE
       OLDMAILZIP(MAILTOVALUE)=NAME:ZIPCODE
       OLDMAILCOUNTRY(MAILTOVALUE)=NAME:COUNTRY
       LOGMESSAGE="Mailing was not updated today. Old mailto address = mailing override address."
      END
    END
  END
 ELSE
  LOGMESSAGE="Not a newly created name. Old mailto address = old record mailing address."
  
 [Set "old mail to" address to name prime if changed record is a newly created record or is a newly-set mail override]
 IF (NEWLYCREATEDFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE AND
     OLDMAILSTREET(MAILTOVALUE)="" AND
     OLDMAILEXTRA(MAILTOVALUE)="" AND 
     OLDMAILCITY(MAILTOVALUE)="" AND
     OLDMAILSTATE(MAILTOVALUE)="" AND
     OLDMAILZIP(MAILTOVALUE)="" AND
     OLDMAILCOUNTRY(MAILTOVALUE)="") OR
    (ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE AND 
     CHANGEDMAILOVERRIDE(TOPLEVELRECORDINDEX)=SLIBTRUE AND
     PREVMAILOVERRIDE(TOPLEVELRECORDINDEX)=0) THEN
  DO
   FOR EACH NAME WITH (NAME:TYPE=0)
    DO
     OLDMAILADDRTYPE(MAILTOVALUE)=NAME:ADDRESSTYPE
     OLDMAILSTREET(MAILTOVALUE)=NAME:STREET
     OLDMAILEXTRA(MAILTOVALUE)=NAME:EXTRAADDRESS
     OLDMAILCITY(MAILTOVALUE)=NAME:CITY
     OLDMAILSTATE(MAILTOVALUE)=NAME:STATE
     OLDMAILZIP(MAILTOVALUE)=NAME:ZIPCODE
     OLDMAILCOUNTRY(MAILTOVALUE)=NAME:COUNTRY
     TARGETLOCATOR=NAME:LOCATOR
    END
   IF NOT (ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE AND 
           CHANGEDMAILOVERRIDE(TOPLEVELRECORDINDEX)=SLIBTRUE AND
           PREVMAILOVERRIDE(TOPLEVELRECORDINDEX)=0) THEN
    LOGMESSAGE="Newly created record. Prime not updated today. Old mailto address = prime address."
   ELSE 
    LOGMESSAGE="Newly set mail override. Prime not updated today. Old mailto address = prime address."
   CALL HASPRIMEBEENUPDATEDTODAY
   IF PRIMEMAILCHANGEINDEX<>-1 THEN
    DO
     IF CHANGEDADDRTYPE(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILADDRTYPE(MAILTOVALUE)=PREVADDRTYPE(PRIMEMAILCHANGEINDEX)
     IF CHANGEDSTREET(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILSTREET(MAILTOVALUE)=PREVSTREET(PRIMEMAILCHANGEINDEX)
     IF CHANGEDEXTRA(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILEXTRA(MAILTOVALUE)=PREVEXTRA(PRIMEMAILCHANGEINDEX)
     IF CHANGEDCITY(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILCITY(MAILTOVALUE)=PREVCITY(PRIMEMAILCHANGEINDEX)
     IF CHANGEDSTATE(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILSTATE(MAILTOVALUE)=PREVSTATE(PRIMEMAILCHANGEINDEX)
     IF CHANGEDZIP(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILZIP(MAILTOVALUE)=PREVZIP(PRIMEMAILCHANGEINDEX)
     IF CHANGEDCOUNTRY(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      OLDMAILCOUNTRY(MAILTOVALUE)=PREVCOUNTRY(PRIMEMAILCHANGEINDEX)
     IF NOT (ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE AND 
             CHANGEDMAILOVERRIDE(TOPLEVELRECORDINDEX)=SLIBTRUE AND
             PREVMAILOVERRIDE(TOPLEVELRECORDINDEX)=0) THEN
      LOGMESSAGE="Newly created record. Prime updated today. Old mailto address = prime address as it was before any FM today"
     ELSE 
      LOGMESSAGE="Newly set mail override. Prime updated today. Old mailto address = prime address as it was before any FM today"
    END
  END
  
 [set "new mail to" address to prime if changed recode had the mail override flag removed]
 IF ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBFALSE AND 
    CHANGEDMAILOVERRIDE(TOPLEVELRECORDINDEX)=SLIBTRUE AND
    PREVMAILOVERRIDE(TOPLEVELRECORDINDEX)=1 THEN
  DO
   FOR EACH NAME WITH (NAME:TYPE=0)
    DO
     NEWADDRTYPE(MAILTOVALUE)=NAME:ADDRESSTYPE
     NEWSTREET(MAILTOVALUE)=NAME:STREET
     NEWEXTRA(MAILTOVALUE)=NAME:EXTRAADDRESS
     NEWCITY(MAILTOVALUE)=NAME:CITY
     NEWSTATE(MAILTOVALUE)=NAME:STATE
     NEWZIP(MAILTOVALUE)=NAME:ZIPCODE
     NEWCOUNTRY(MAILTOVALUE)=NAME:COUNTRY
     TARGETLOCATOR=NAME:LOCATOR
    END
   LOGMESSAGE="Removed mail override code. Prime not updated today. New mailto address = prime address."
   CALL HASPRIMEBEENUPDATEDTODAY
   IF PRIMEMAILCHANGEINDEX<>-1 THEN
    DO
     IF CHANGEDADDRTYPE(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWADDRTYPE(MAILTOVALUE)=PREVADDRTYPE(PRIMEMAILCHANGEINDEX)
     IF CHANGEDSTREET(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWSTREET(MAILTOVALUE)=PREVSTREET(PRIMEMAILCHANGEINDEX)
     IF CHANGEDEXTRA(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWEXTRA(MAILTOVALUE)=PREVEXTRA(PRIMEMAILCHANGEINDEX)
     IF CHANGEDCITY(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWCITY(MAILTOVALUE)=PREVCITY(PRIMEMAILCHANGEINDEX)
     IF CHANGEDSTATE(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWSTATE(MAILTOVALUE)=PREVSTATE(PRIMEMAILCHANGEINDEX)
     IF CHANGEDZIP(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWZIP(MAILTOVALUE)=PREVZIP(PRIMEMAILCHANGEINDEX)
     IF CHANGEDCOUNTRY(PRIMEMAILCHANGEINDEX)=SLIBTRUE THEN
      NEWCOUNTRY(MAILTOVALUE)=PREVCOUNTRY(PRIMEMAILCHANGEINDEX)
     LOGMESSAGE="Removed mail override code. Prime updated today. New mailto address = prime address as it was before any FM today"
    END
  END
  
END

[**********************************************]
[**********************************************]
PROCEDURE HASMAILOVERRIDEBEENFMDTODAY
 MAILOVERRIDERECORDCHANGEINDEX=-1
 FOR WORKCNT=0 TO NAMERECORDSFMDCNT-1
  DO
   IF (ACTIVEMAILOVERRIDEFLAG(WORKCNT)=SLIBTRUE OR 
       (ACTIVEMAILOVERRIDEFLAG(WORKCNT)=SLIBFALSE AND CHANGEDMAILOVERRIDE(WORKCNT)=SLIBTRUE)) AND
      NEWLYCREATEDFLAG(WORKCNT)=SLIBFALSE AND NAMERECORDTYPE(WORKCNT)=0 THEN
    DO
     MAILOVERRIDERECORDCHANGEINDEX=WORKCNT
     IF ACTIVEMAILOVERRIDEFLAG(WORKCNT)=SLIBFALSE AND CHANGEDMAILOVERRIDE(WORKCNT)=SLIBTRUE THEN
      WORKCNT=NAMERECORDSFMDCNT [break - mail override before changes takes priority]
    END
  END
END

[**********************************************]
[**********************************************]
PROCEDURE HASPRIMEBEENUPDATEDTODAY
 PRIMEMAILCHANGEINDEX=-1
 FOR WORKCNT=0 TO NAMERECORDSFMDCNT-1
  DO
   IF NAMERECORDLOC(WORKCNT)=TARGETLOCATOR THEN
    DO
     PRIMEMAILCHANGEINDEX=WORKCNT
     WORKCNT=NAMERECORDSFMDCNT [break]
    END
  END
END

[**********************************************]
[**********************************************]
PROCEDURE PRINTCHANGEINFO
 NEWLINE
 PRINT REPEATCHR("-",132)
 NEWLINE
 IF EXCLUDEREASON<>"" THEN
  DO
   NEWLINE
   PRINT "The following record was excluded because: "+EXCLUDEREASON
   NEWLINE
   NEWLINE
  END
 ELSE
 DO
	 PRINT "Account "+ACCOUNT:NUMBER+" "+PARENTRECORDTYPE(TOPLEVELRECORDINDEX)
	 IF PARENTRECORDTYPE(TOPLEVELRECORDINDEX)<>"ACCT" THEN
	  DO
	   PRINT "-"
	   PRINT VALUE(PARENTRECORDIDLOC(TOPLEVELRECORDINDEX))
	  END
	 PRINT " Name Loc "
	 PRINT NAMERECORDLOC(TOPLEVELRECORDINDEX)
	 NEWLINE
	 NEWLINE
	 NEWLINE
	 IF ACTIVEMAILOVERRIDEFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE THEN
	  DO
	   PRINT "Mail Override Record"
	   NEWLINE
	  END
	 IF NEWLYCREATEDFLAG(TOPLEVELRECORDINDEX)=SLIBTRUE THEN
	  PRINT "Create"
	 ELSE 
	  PRINT "Revise"
	 NEWLINE NEWLINE
	 COL = 020 "Old/Before RECORD Addr"
	 COL = 070 "Old/Before MAIL TO Addr"
	 IF OLDMAILTOALREADYPRINTED=SLIBTRUE THEN
	  PRINT " (will not print - duplicate notice addr)"
	 NEWLINE
	 PRINT "Mail Override:"
	 COL = 020 OLDMAILMAILOVERRIDE(RECORDVALUE)
	 COL = 070 OLDMAILMAILOVERRIDE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Type:"
	 COL = 020 OLDMAILADDRTYPE(RECORDVALUE)
	 COL = 070 OLDMAILADDRTYPE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Extra Addr:"
	 COL = 020 OLDMAILEXTRA(RECORDVALUE)
	 COL = 070 OLDMAILEXTRA(MAILTOVALUE)
	 NEWLINE
	 PRINT "Street:"
	 COL = 020 OLDMAILSTREET(RECORDVALUE)
	 COL = 070 OLDMAILSTREET(MAILTOVALUE)
	 NEWLINE
	 PRINT "City:"
	 COL = 020 OLDMAILCITY(RECORDVALUE)
	 COL = 070 OLDMAILCITY(MAILTOVALUE)
	 NEWLINE
	 PRINT "State:"
	 COL = 020 OLDMAILSTATE(RECORDVALUE)
	 COL = 070 OLDMAILSTATE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Zipcode:"
	 COL = 020 OLDMAILZIP(RECORDVALUE)
	 COL = 070 OLDMAILZIP(MAILTOVALUE)
	 NEWLINE
	 PRINT "Country:"
	 COL = 020 OLDMAILCOUNTRY(RECORDVALUE)
	 COL = 070 OLDMAILCOUNTRY(MAILTOVALUE)
	 NEWLINE NEWLINE
	 COL = 020 "New RECORD Addr"
	 COL = 070 "New MAIL TO Addr"
	 IF NEWMAILTOALREADYPRINTED=SLIBTRUE THEN
	  PRINT " (will not print - duplicate notice addr)"
	 NEWLINE
	 PRINT "Mail Override:"
	 COL = 020 NEWMAILOVERRIDE(RECORDVALUE)
	 COL = 070 NEWMAILOVERRIDE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Type:"
	 COL = 020 NEWADDRTYPE(RECORDVALUE)
	 COL = 070 NEWADDRTYPE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Extra Addr:"
	 COL = 020 NEWEXTRA(RECORDVALUE)
	 COL = 070 NEWEXTRA(MAILTOVALUE)
	 NEWLINE
	 PRINT "Street:"
	 COL = 020 NEWSTREET(RECORDVALUE)
	 COL = 070 NEWSTREET(MAILTOVALUE)
	 NEWLINE
	 PRINT "City:"
	 COL = 020 NEWCITY(RECORDVALUE)
	 COL = 070 NEWCITY(MAILTOVALUE)
	 NEWLINE
	 PRINT "State:"
	 COL = 020 NEWSTATE(RECORDVALUE)
	 COL = 070 NEWSTATE(MAILTOVALUE)
	 NEWLINE
	 PRINT "Zipcode:"
	 COL = 020 NEWZIP(RECORDVALUE)
	 COL = 070 NEWZIP(MAILTOVALUE)
	 NEWLINE
	 PRINT "Country:"
	 COL = 020 NEWCOUNTRY(RECORDVALUE)
	 COL = 070 NEWCOUNTRY(MAILTOVALUE)
	 NEWLINE NEWLINE
	END
END

[**********************************************]
[**********************************************]
#INCLUDE "SLIB.COMMON.PRO"
#INCLUDE "SLIB.LISTEXPAND.LITE.PRO"
#INCLUDE "SLIB.PACKAGEREC.NAME.PRO"


